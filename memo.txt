今後の実装方針
・ソート方法の変更
(現状)
two_way/list.cの
ListSort関数でさらにListSwap関数を使用
・リストのインデックス0から順番に調べていく

(候補)：Gemini検索
挿入ソートやマージソートが比較的に適しているとのこと。
・バブルソート
　・隣接する要素を比較して、順序が逆であれば交換する
・選択ソート
　・未ソート部分から最小の要素を選択して、
　　ソート済みの部分の末尾に追加する操作を繰り返す
・挿入ソート
　・未ソート部分から要素を一つずつ取り出して、
　　ソート済みの部分の適切な位置に挿入する操作を繰り返す
・マージソート
　・リストを2つの部分リストに分割し、それぞれを再帰的にソートした後、ソート済みの部分リストに分割する

(その他)
・頻度順と単語順の両方を続けて出力する方法

